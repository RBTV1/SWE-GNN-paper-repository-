# dataset creation parameters
dataset_parameters:
  database_folder: 'database/datasets'
  temporal_res: 60
  train_size: 80
  val_prcnt: 0.25
  test_size: 10 # choose from: value(1,20), 'random_breach', 'big'
  seed: 111

# Scaler options: null, 'minmax', 'minmax_neg', or 'standard'
scalers: 
  DEM_scaler        : null
  slope_scaler      : null
  WD_scaler         : null
  V_scaler          : null

# node features
selected_node_features : 
  slope_x       : True
  slope_y       : True
  area          : False
  DEM           : True

# edge features
selected_edge_features : 
  cell_length   : True
  normal_x      : True
  normal_y      : True

# temporal training dataset
temporal_dataset_parameters:
  rollout_steps : 8
  previous_t    : 2
  time_start    : 1
  time_stop     : -1 #*int(60/temporal_res)

# Models hyperparameters
models:
    model_type        : 'GNN'
    type_GNN          : "SWEGNN"  # options: 'SWEGNN', 'SWEGNN_ng', 'GAT', 'GNN_L'
    hid_features      : 64
    K                 : 8         # num GNN layers
    gnn_activation    : 'tanh'
    dropout           : 0
    mlp_layers        : 2         # parameters MLP in the SWEGNN (cfr. eq.7)
    mlp_activation    : 'prelu'
    seed              : 4444
    edge_mlp          : True      # Encoder for the edge attributes
    normalize         : True      # Normalization step in eq.7 (leave it True)
    with_filter_matrix: True      # Add trainable weight matrix in eq. 8
    with_gradient     : True      # Add h_j - h_i gradient term in eq. 7
    with_WL           : True      # Include water levels in static attributes

    # model_type        : 'MLP'
    # hid_features      : 256
    # n_layers          : 4
    # activation        : 'relu'
    # dropout           : 0
    # seed              : 42

    # model_type        : 'CNN'
    # initial_hid_dim   : 64
    # n_downsamples     : 3
    # activation        : 'prelu'
    # seed              : 42
            
trainer_options:
  type_loss         : 'RMSE'        # 'RMSE' or 'MAE'
  only_where_water  : True          # Calculate loss only where there's water
  batch_size        : 8             # batch size
  velocity_scaler   : 3             # weighting coefficient for velocity in loss (eq. 14)
  curriculum_epoch  : 15            # number of epochs before updating curriculum strategy
  patience          : 30            # patience for early stopping
  max_epochs        : 150           # maximum number of epochs
  report_freq       : 5             # frquency to report loss in print

# learning rate
lr_info:
    learning_rate   : 0.007
    weight_decay    : 0
    gamma           : 0.9           # Parametrs for learning rate scheduler
    step_size       : 7             # Parametrs for learning rate scheduler

temporal_test_dataset_parameters:
  time_start  : 1
  time_stop   : -1